name: QA Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  qa-checks:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run QA checks
      run: npm run qa
      env:
        CI: true

    - name: Upload QA report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: qa-report-${{ matrix.node-version }}
        path: |
          qa-report.json
          docs/qalog.md

    - name: Comment PR with QA results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('qa-report.json', 'utf8'));

          const status = report.errors > 0 ? '‚ùå Failed' : report.warnings > 0 ? '‚ö†Ô∏è Passed with warnings' : '‚úÖ Passed';
          const color = report.errors > 0 ? 'red' : report.warnings > 0 ? 'yellow' : 'green';

          const body = `
          ## üõ°Ô∏è QA Check Results

          **Status:** ${status}
          **Duration:** ${report.duration.toFixed(1)}s
          **Errors:** ${report.errors}
          **Warnings:** ${report.warnings}

          ### Details
          - ‚úÖ Code quality checks completed
          - ‚úÖ Testing completed
          - ‚úÖ Build verification completed
          - ‚úÖ Security analysis completed

          [View full QA log](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/docs/qalog.md)
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

  security-audit:
    runs-on: ubuntu-latest
    needs: qa-checks

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true

    - name: Run secret scanning
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-check:
    runs-on: ubuntu-latest
    needs: [qa-checks, security-audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build

    - name: Run production QA checks
      run: npm run qa
      env:
        NODE_ENV: production

    - name: Create deployment artifact
      run: |
        mkdir deploy
        cp -r dist/* deploy/
        cp package.json deploy/
        cp README.md deploy/
        tar -czf qa-agent-deploy.tar.gz deploy/

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: qa-agent-deploy
        path: qa-agent-deploy.tar.gz